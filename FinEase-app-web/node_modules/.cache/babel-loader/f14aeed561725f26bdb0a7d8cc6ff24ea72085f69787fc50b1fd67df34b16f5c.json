{"ast":null,"code":"var _jsxFileName = \"/home/tresor/portofolio-project/FinEase-app-web/frontend/src/pages/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { registerUser } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterContainer = styled.div`\n  max-width: 400px;\n  margin: 50px auto;\n  padding: 20px;\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 10px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\n  text-align: center;\n`;\n_c = RegisterContainer;\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  margin: 10px 0;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`;\n_c2 = Input;\nconst Button = styled.button`\n  width: 100%;\n  padding: 10px;\n  background: #007BFF;\n  color: white;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n  transition: 0.3s;\n\n  &:hover {\n    background: #0056b3;\n  }\n`;\n_c3 = Button;\nconst Register = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleRegister = async () => {\n    const success = await registerUser({\n      name,\n      email,\n      password\n    });\n    if (success) {\n      alert(\"Compte créé avec succès !\");\n      navigate('/login');\n    } else {\n      alert(\"Échec de l'inscription.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(RegisterContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cr\\xE9er un compte\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      placeholder: \"Nom\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"password\",\n      placeholder: \"Mot de passe\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleRegister,\n      children: \"S'inscrire\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"csJiuSlQmiH49sngUzydjkZ0k9I=\", false, function () {\n  return [useNavigate];\n});\n_c4 = Register;\nexport default Register;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"RegisterContainer\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"Register\");","map":{"version":3,"names":["React","useState","styled","useNavigate","registerUser","jsxDEV","_jsxDEV","RegisterContainer","div","_c","Input","input","_c2","Button","button","_c3","Register","_s","name","setName","email","setEmail","password","setPassword","navigate","handleRegister","success","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c4","$RefreshReg$"],"sources":["/home/tresor/portofolio-project/FinEase-app-web/frontend/src/pages/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { registerUser } from '../services/api';\n\nconst RegisterContainer = styled.div`\n  max-width: 400px;\n  margin: 50px auto;\n  padding: 20px;\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 10px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\n  text-align: center;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  margin: 10px 0;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  padding: 10px;\n  background: #007BFF;\n  color: white;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n  transition: 0.3s;\n\n  &:hover {\n    background: #0056b3;\n  }\n`;\n\nconst Register = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleRegister = async () => {\n    const success = await registerUser({ name, email, password });\n    if (success) {\n      alert(\"Compte créé avec succès !\");\n      navigate('/login');\n    } else {\n      alert(\"Échec de l'inscription.\");\n    }\n  };\n\n  return (\n    <RegisterContainer>\n      <h2>Créer un compte</h2>\n      <Input type=\"text\" placeholder=\"Nom\" value={name} onChange={(e) => setName(e.target.value)} />\n      <Input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n      <Input type=\"password\" placeholder=\"Mot de passe\" value={password} onChange={(e) => setPassword(e.target.value)} />\n      <Button onClick={handleRegister}>S'inscrire</Button>\n    </RegisterContainer>\n  );\n};\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}