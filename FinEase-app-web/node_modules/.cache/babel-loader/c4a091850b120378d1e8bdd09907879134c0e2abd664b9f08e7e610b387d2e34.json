{"ast":null,"code":"var _jsxFileName = \"/home/tresor/portofolio-project/FinEase-app-web/frontend/src/pages/Reports.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FinanceContext } from '../context/FinanceContext';\nimport { Line, Doughnut } from 'react-chartjs-2';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReportsContainer = styled(motion.div)`\n  padding: 30px;\n  text-align: center;\n`;\n_c = ReportsContainer;\nconst ChartWrapper = styled.div`\n  max-width: 600px;\n  margin: 20px auto;\n`;\n_c2 = ChartWrapper;\nconst FilterContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\n_c3 = FilterContainer;\nconst Select = styled.select`\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`;\n_c4 = Select;\nconst Reports = () => {\n  _s();\n  const {\n    transactions\n  } = useContext(FinanceContext);\n  const [filteredTransactions, setFilteredTransactions] = useState(transactions);\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [selectedYear, setSelectedYear] = useState('');\n  useEffect(() => {\n    if (selectedMonth || selectedYear) {\n      setFilteredTransactions(transactions.filter(t => {\n        const date = new Date(t.date);\n        return (selectedMonth ? date.getMonth() + 1 === parseInt(selectedMonth) : true) && (selectedYear ? date.getFullYear() === parseInt(selectedYear) : true);\n      }));\n    } else {\n      setFilteredTransactions(transactions);\n    }\n  }, [selectedMonth, selectedYear, transactions]);\n  const revenues = filteredTransactions.filter(t => t.type === 'revenu').reduce((acc, t) => acc + t.amount, 0);\n  const expenses = filteredTransactions.filter(t => t.type === 'dépense').reduce((acc, t) => acc + t.amount, 0);\n  const lineChartData = {\n    labels: filteredTransactions.map(t => new Date(t.date).toLocaleDateString()),\n    datasets: [{\n      label: 'Revenus (€)',\n      data: filteredTransactions.filter(t => t.type === 'revenu').map(t => t.amount),\n      borderColor: 'green',\n      fill: false\n    }, {\n      label: 'Dépenses (€)',\n      data: filteredTransactions.filter(t => t.type === 'dépense').map(t => t.amount),\n      borderColor: 'red',\n      fill: false\n    }]\n  };\n  const categoryTotals = filteredTransactions.reduce((acc, t) => {\n    acc[t.category] = (acc[t.category] || 0) + t.amount;\n    return acc;\n  }, {});\n  const doughnutChartData = {\n    labels: Object.keys(categoryTotals),\n    datasets: [{\n      label: 'Répartition des Dépenses',\n      data: Object.values(categoryTotals),\n      backgroundColor: ['#FF5733', '#33FF57', '#3357FF', '#FF33A1', '#FFD700']\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(ReportsContainer, {\n    initial: {\n      opacity: 0,\n      x: -50\n    },\n    animate: {\n      opacity: 1,\n      x: 0\n    },\n    exit: {\n      opacity: 0,\n      x: 50\n    },\n    transition: {\n      duration: 0.5\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistiques Avanc\\xE9es\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        onChange: e => setSelectedMonth(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Tous les mois\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), Array.from({\n          length: 12\n        }, (_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: i + 1,\n          children: new Date(0, i).toLocaleString('fr-FR', {\n            month: 'long'\n          })\n        }, i + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        onChange: e => setSelectedYear(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Toutes les ann\\xE9es\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), Array.from(new Set(transactions.map(t => new Date(t.date).getFullYear()))).map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: year,\n          children: year\n        }, year, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChartWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\xC9volution des Revenus et D\\xE9penses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: lineChartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChartWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"R\\xE9partition des D\\xE9penses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n        data: doughnutChartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(Reports, \"nI2nYYv0jMUZEBib7RbElNGoELU=\");\n_c5 = Reports;\nexport default Reports;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"ReportsContainer\");\n$RefreshReg$(_c2, \"ChartWrapper\");\n$RefreshReg$(_c3, \"FilterContainer\");\n$RefreshReg$(_c4, \"Select\");\n$RefreshReg$(_c5, \"Reports\");","map":{"version":3,"names":["React","useContext","useState","useEffect","styled","FinanceContext","Line","Doughnut","motion","jsxDEV","_jsxDEV","ReportsContainer","div","_c","ChartWrapper","_c2","FilterContainer","_c3","Select","select","_c4","Reports","_s","transactions","filteredTransactions","setFilteredTransactions","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","filter","t","date","Date","getMonth","parseInt","getFullYear","revenues","type","reduce","acc","amount","expenses","lineChartData","labels","map","toLocaleDateString","datasets","label","data","borderColor","fill","categoryTotals","category","doughnutChartData","Object","keys","values","backgroundColor","initial","opacity","x","animate","exit","transition","duration","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","Array","from","length","_","i","toLocaleString","month","Set","year","_c5","$RefreshReg$"],"sources":["/home/tresor/portofolio-project/FinEase-app-web/frontend/src/pages/Reports.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FinanceContext } from '../context/FinanceContext';\nimport { Line, Doughnut } from 'react-chartjs-2';\nimport { motion } from 'framer-motion';\n\nconst ReportsContainer = styled(motion.div)`\n  padding: 30px;\n  text-align: center;\n`;\n\nconst ChartWrapper = styled.div`\n  max-width: 600px;\n  margin: 20px auto;\n`;\n\nconst FilterContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\n\nconst Select = styled.select`\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`;\n\nconst Reports = () => {\n  const { transactions } = useContext(FinanceContext);\n  const [filteredTransactions, setFilteredTransactions] = useState(transactions);\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [selectedYear, setSelectedYear] = useState('');\n\n  useEffect(() => {\n    if (selectedMonth || selectedYear) {\n      setFilteredTransactions(transactions.filter(t => {\n        const date = new Date(t.date);\n        return (\n          (selectedMonth ? date.getMonth() + 1 === parseInt(selectedMonth) : true) &&\n          (selectedYear ? date.getFullYear() === parseInt(selectedYear) : true)\n        );\n      }));\n    } else {\n      setFilteredTransactions(transactions);\n    }\n  }, [selectedMonth, selectedYear, transactions]);\n\n  const revenues = filteredTransactions.filter(t => t.type === 'revenu').reduce((acc, t) => acc + t.amount, 0);\n  const expenses = filteredTransactions.filter(t => t.type === 'dépense').reduce((acc, t) => acc + t.amount, 0);\n\n  const lineChartData = {\n    labels: filteredTransactions.map(t => new Date(t.date).toLocaleDateString()),\n    datasets: [\n      {\n        label: 'Revenus (€)',\n        data: filteredTransactions.filter(t => t.type === 'revenu').map(t => t.amount),\n        borderColor: 'green',\n        fill: false,\n      },\n      {\n        label: 'Dépenses (€)',\n        data: filteredTransactions.filter(t => t.type === 'dépense').map(t => t.amount),\n        borderColor: 'red',\n        fill: false,\n      }\n    ]\n  };\n\n  const categoryTotals = filteredTransactions.reduce((acc, t) => {\n    acc[t.category] = (acc[t.category] || 0) + t.amount;\n    return acc;\n  }, {});\n\n  const doughnutChartData = {\n    labels: Object.keys(categoryTotals),\n    datasets: [\n      {\n        label: 'Répartition des Dépenses',\n        data: Object.values(categoryTotals),\n        backgroundColor: ['#FF5733', '#33FF57', '#3357FF', '#FF33A1', '#FFD700'],\n      }\n    ]\n  };\n\n  return (\n    <ReportsContainer \n      initial={{ opacity: 0, x: -50 }} \n      animate={{ opacity: 1, x: 0 }} \n      exit={{ opacity: 0, x: 50 }} \n      transition={{ duration: 0.5 }}\n    >\n      <h1>Statistiques Avancées</h1>\n\n      <FilterContainer>\n        <Select onChange={(e) => setSelectedMonth(e.target.value)}>\n          <option value=\"\">Tous les mois</option>\n          {Array.from({ length: 12 }, (_, i) => (\n            <option key={i + 1} value={i + 1}>{new Date(0, i).toLocaleString('fr-FR', { month: 'long' })}</option>\n          ))}\n        </Select>\n\n        <Select onChange={(e) => setSelectedYear(e.target.value)}>\n          <option value=\"\">Toutes les années</option>\n          {Array.from(new Set(transactions.map(t => new Date(t.date).getFullYear()))).map(year => (\n            <option key={year} value={year}>{year}</option>\n          ))}\n        </Select>\n      </FilterContainer>\n\n      <ChartWrapper>\n        <h2>Évolution des Revenus et Dépenses</h2>\n        <Line data={lineChartData} />\n      </ChartWrapper>\n\n      <ChartWrapper>\n        <h2>Répartition des Dépenses</h2>\n        <Doughnut data={doughnutChartData} />\n      </ChartWrapper>\n    </ReportsContainer>\n  );\n};\n\nexport default Reports;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}